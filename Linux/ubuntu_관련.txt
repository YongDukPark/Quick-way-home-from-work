명령어 꿀팁

-- 명령어 확인
man
command, system call, function 등 다양한 리눅스 명령어의 사용법을 알수 있다.

-- 명령어 확인2
help

-- 서버접속
ubuntu 서버접속
ssh 유저명@ip주소
 -i 로 key를 추가해서 사용 가능
ex
ssh -i 나는야멋쟁이키.cer 나는야멋쟁이유저@나는야멋쟁이ip

/usr/lib/firewalld

-- scp방식 파일 던지기
scp /c/나는/경로/입니다/넘길파일.확장자 dsm@ip주소 /home/나는/경로/하하하/저장할디렉토리
서버 > 서버로 보내는 방식이다. 로컬에서 서버로 보낼때 주로 사용했던 방식이며 파일질라 사용해도 괜춘합니다.

************기본적인거**************

-- 이동기
cd 디렉토리명
cd home 이런식으로 들어갈수 있다.
cd home/퇴근/원한다
이런식으로 한번에 여러곳을 들어갈수도 있다.

cd .. 	디렉토리 나가기

cd -	이전 디렉토리로 가기	직접 써보는게 제일 이해가 빠른친구 별거없다.

cd ~	홈 디렉토리로 가기

-- 디렉토리 파일 확인
ls -al
개인적으로 이걸 가장많이 사용하고 보기가 편해서 사용한다.

--이동 및 이름변경
mv 경로1/경로2/경로3/파일명.확장자 경로1/옮길디렉토리명	파일 옮기기용 mv 명령어

mv 나는야행복한파일.확장자 나는야신나는파일.확장자		파일명 변경용 mv명령어

--복사
cp 나는야원본파일.확장자 나는야복사파일.확장자
파일을 복사한다 경로를 추가해서 넣는거도 가능하다.

--파일 생성
touch 파일명.확장자
파일을 생성한다.

-- 삭제
rm 파일명.확장자
rm test.txt		이런식으로 사용이 가능하다.

-- 디렉토리(폴더) 삭제
rm -rf 디렉토리명
rm -rf testD
이런식으로 사용이 가능하다
*/******/*/*** rm 명령어는 조심해서 사용하는걸 추천

-- 경로확인
pwd

결과값 /home/dsm/으악/으아아악
경로 따올때 주로 사용하는 친구입니다.

-- 디렉토리 생성
mkdir 원하는디렉토리명
디렉토리 생성할때 사용한다.


-- 압축해제
unzip 압축파일명.확장자
unzip zipFile.zip
이런식으로 사용이 가능하다.


--	파일 열기 및 내용 확인

vi 파일명.확장자
파일을 들어간다. 메모장 여는거와 같은 개념
차이점이 있다면 방향키가 다른경우가 있고
편집할경우 i를 누르고 편집해야함

이동기
숫자 + shift + g		숫자로 입력한 라인으로 간다.
g+g 		맨 위로
shift + g 	맨아래로
home		라인 맨 뒤로
End			라인 맨 앞으로

'/' : 아래 방향으로 탐색
ex /나는멋진당근 	이라고 치면 현재 커서 기준으로 아래 방향으로 탐색한다.
'?' : 윗 방향으로 탐색
ex ?나는멋진당근	이라고 치면 현재 커서 기준으로 윗 방향으로 탐색한다.

tip /^나는멋진당근	이런식으로 정규표현식도 가능하다.

그후 검색 결과가 나왔을경우에
n : 다음 문자열 탐색
N = shift+n : 이전 문자열 탐색

문자열 변환
%s/[원래문자열]/[바꿀문자열]/[옵션]
ex) 
기본 사용법
:s/못난이/멋쟁이		해석 : 현재 줄에서 첫번째 못난이를 멋쟁이로 바꾼다 하나의 줄에서 해당 문자열을 찾으면 치환하고 끝! 뒤에 똑같은 친구가 있어도 아무런 일이 생기지않음
:%s/못난이/멋쟁이		해석 : 모든 각 줄에서 첫번째 못난이를 멋쟁이로 바꾼다 하나의 줄에서 해당 문자열을 찾으면 치환한다. 같은 라인뒤에 똑같은 못난이가 있어도 아무런 일이 생기지않음
:s/못난이/멋쟁이/g		해석 : g옵션은 해당 라인의 모든 친구들을 바꿔준다. 못난이 > 멋쟁이로	그말은 즉슨 :%s/못난이/멋쟁이/g 이렇게 하면 모든라인에 모든 내용이 바뀐다고 보면 된다.
:%s/못난이/멋쟁이/cg	해석 : 두가지를 알수있다 c라는 새로운 옵션과 옵션은 여러개를 붙일수 있다. 여기서 나온 c는 변환전 체크를 할수있게 해준다.
:%s/못난이/멋쟁이/ig	해석 : 여기서 i친구가 새로왔다 이건 영문같은경우 못난이 대신 This라고 적었을경우 THis같이 대소문자가 다르더라도 변환할수 있게 해주는 옵션이다.

나갈경우 
esc 누른이후
:q!     저장하지 않고 나가기
:wq! 	저장하고 나가기
요상한짓을 하면 그 뭐냐 그그그그 bak 파일인가? 암튼 백업파일같은게 하나 생길수도 있음
이게 그 습관적 컨z라는 병명이 있다. 이걸 누르게 되면 .swp 일명 스왑파일이 생성되게 된다.

jobs		로 작업파일 = 프로세스 확인하기
fg %숫자		로 해당 vi를 포그라운드로 다시 시작할수 있다.
jobs로 프로세스 확인하고 해당 프로세스로 돌아가는 원리다.


or

로그 확인용 ***********
tail -f 파일명.확장자
나갈경우 컨트롤 c 이하 컨씨로 명칭
파일의 끝부분을 출력한다.
이후 추가되는 내용을 실시간으로 확인이 가능한게 특징이며 주로 로그를 볼떄 사용한다. (개인적)

echo 명령어와 비슷한 느낌

or

cat 파일명.확장자
이런친구도 있다 정도로 확인하면 좋은친구입니다.



-- 서버확인
서버 확인하는 방법
ps -ef | grep [입력]

ps 이란
현재 실행중인 process를 확인할떄 사용한다. (process status) (-f:full format, -e 모든 프로세스)

ps 옵션
-e > 모든 프로세스 출력
-f > 풀 포맷으로 보여준다.(UID, PID 등등)

grep 이란
파일 또는 텍스트에서 특정 키워드가 포함된 줄만 출력한다. (g / re / p)

grep 옵션
-i > 대소문자 구분하지 않고 검색
-n > 줄 번호를 함께 출력
-x > 패턴과 단어 전체가 일치하는 라인 출력

|(파이프라인) == pipe 사용하는 이유 
파이프라인은 보통 명령어1 | 명령어2 의 형태를가지고 있다. (명령어1 | 명령어2 | 명령어3) 과 같은 형태도 가능하다.
파이프라인을 사용시 명령어1의 처리 결과를 명령어2로 전달한다.
간단하게 보면 명령어1과 명령어2의 연결을 위해 사용한다고 볼수있다.

grep 명령어는 로그에서 특정 문자열로 검색할때 자주 사용하기도 한다. 여기저기서 많이 사용된다.
grep "찾을 문자열" FileName

단어의 대소문자 구분없이 단어찾기
grep -i "찾을 문자열" FileName

몇번째 줄에 단어가 포함되어 있는지 찾기
grep -n "찾을 문자열" FileName

-- 포트번호 확인용

기본 확인
netstat -nap

열려있는 포트번호 확인
netstat -nap | grep LISTEN

특정 포트번호 확인
netstat -nap | grep "포트번호"


-- 포트번호 추가 열기
firewall-cmd --permanent --zone=public --add-port=8081/tcp

-- 리로드 적용? 같은 느낌 아직 잘 모르는 친구입니다.
firewall-cmd --reload

-- 사용 가능한 모든 서비스/포트 번호 출력
firewall-cmd --list-all

-- 일반적인 커널에 대한 정보
-- Linux ubuntu 만 되고있음
uname -a

-- 리눅스 버전 확인 명령어
--centOS 는 이상없이 되는데 Linux ubuntu 는 안된다.
--참고 일단 centOS는 레드햇 제휴로 개발한 컴퓨터 운영체제이다. 그래서 사용 불가한듯

cat /etc/redhat-release

--※우분투 버전 확인	****** 
--Ubuntu 16.04 이상 버전에서만 가능
cat /etc/os-release

--이것도 ubuntu 버전 확인하는 방법임
lsb_release -a


-- bit 확인 명령어
getconf LONG_BIT

<ip주소 확인>
	hostname -I
</ip주소 확인>
