<설정관련>
	<설정 확인>
		git config --list
		
		이런식으로 key value 형식으로 뽑아낼수 있다.
		git config user.name
	</설정 확인>
	<기본세팅>
		git config --global user.name "ParkYoungDuk"
		git config --global user.email "dydejrdms@naver.com"
	</기본세팅>
	<alias 세팅 ※ bash 관리자권한으로 실행해야함>
	
		※※※bash 관리자권한으로 실행해야함※※※

		1. C:\Program Files\Git\etc
		2. vi bash.bashrc
		3. [. /etc/profile.d/aliases.sh] 대괄호 안에 있는 텍스트를 맨밑 
		shopt -q login_shell || . /etc/profile.d/git-prompt.sh 이 문구 밑에 추가
		
		4. C:\Program Files\Git\etc\profile.d
		5. vi aliases.sh
		6. [# --show-control-chars: help showing Korean or accented characters] 이 문구 밑에 
		
		alias gs='git status'
		alias aris='cd /c/Users/dydej/Desktop/JavaProject'
		이런식으로 원하는 형태로 추가
		exit로 꺼준후 실행시키고 테스트해보기
	</alias 세팅>
</설정관련>
<git 파일들 다른컴터에서 가져오기>
	git clone [git url 가져오기]
</git 파일들 다른컴터에서 가져오기>
<git add 취소>
	<모든파일 취소>
		git reset
	</모든파일 취소>
	<특정파일 취소>
		git reset 경로명
	</특정파일 취소>
</git add 취소>

<git checkout - 변경내용 취소>
	git checkout 경로명
</git checkout - 변경내용 취소>

<.gitignore 설정>
	# 확장자가 .a인 파일 무시
	*.a
	
	ex 윗 라인에서 확장자가 .a인 파일은 무시하게 했지만 lib.a는 무시하지 않음
	!lib.a
	
	ex 현재 디렉토리에 있는 TODO파일은 무시하고 subdir/TODO처럼 하위디렉토리에 있는 파일은 무시하지 않음
	/TODO
	
	ex TODO/ 디렉토리에 있는 모든 파일 무시
	TODO/
	
	ex doc/notes.txt 파일은 무시하고 doc/server/arch.txt 파일은 무시하지 않음
	doc/*.txt
	
	ex doc 디렉토리 아래 모든 .pdf 파일 무시
	doc/**/*.pdf
	
	<※※※만약 ignore 적용이 안된다※※※>
		git rm -r --cached .
		이거로 캐쉬를 날리고 다시 commit후 진행한다.
	</※※※만약 ignore 적용이 안된다※※※>
	
</git ignore 설정>

<git 레파지토리의 파일 삭제>
	1. 
	git url로 들어가서 파일 delete시키기
	
	2. 
	git rm --cached -r 폴더/파일명
	
	여기서 --cahed 명령어를 안붙이게 되면 레파지토리와 내 디렉토리의 파일이 둘다 날라가게 된다.
</git 레파지토리의 파일 삭제>

<git 저장소 repository 변경>
	1.
	git remote -v
	명령어로 현재 연결되어있는 주소를 확인한다.
	2.
	git remote set-url 새로운url
	로 새로운 url을 셋팅한다.
</git 저장소 repository 변경>

<git commit 취소>
	// [방법 1] commit을 취소하고 해당 파일들은 staged 상태로 워킹 디렉터리에 보존
	$ git reset --soft HEAD^
	// [방법 2] commit을 취소하고 해당 파일들은 unstaged 상태로 워킹 디렉터리에 보존
	$ git reset --mixed HEAD^ // 기본 옵션
	$ git reset HEAD^ // 위와 동일
	$ git reset HEAD~2 // 마지막 2개의 commit을 취소
	// [방법 3] commit을 취소하고 해당 파일들은 unstaged 상태로 워킹 디렉터리에서 삭제
	$ git reset --hard HEAD^
	참고 https://gmlwjd9405.github.io/2018/05/25/git-add-cancle.html
</git commit 취소>

<git merge 발생시>
	1. 
	pull한번 땡겨주기
	git pull origin master
	2. 
	git push origin master 해주기
<git merge 발생시>

…or create a new repository on the command line

echo "# TodayLunch" >> README.md
git init
git add README.md
git commit -m "first commit"
git branch -M main
git remote add origin https://github.com/YongDukPark/TodayLunch.git
git push -u origin main


…or push an existing repository from the command line

git remote add origin https://github.com/YongDukPark/TodayLunch.git
git branch -M main
git push -u origin main

<만약 로컬 디렉토리 위치가 바뀌었을경우>
	x 0. git init (이건 해당 디렉토리에 .git 디렉토리를 생성하는 과정이다.  .git이란 )
	1. 해당 디렉토리 들어가기 
	2. git remote set-url origin https://github.com/YongDukPark/Quick-way-home-from-work.git 이런식으로 경로 설정해주기
	끝
</만약 로컬 디렉토리 위치가 바뀌었을경우>